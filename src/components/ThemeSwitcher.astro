---
import { themeList } from "./themeList"

const myThemeList = [
  'light',
  'dark',
  'latte', 'frappe', 'macchiato', 'mocha',
  'cupcake',
  'bumblebee',
  'emerald',
  'corporate',
  'synthwave',
  'retro',
  'valentine',
  'halloween',
  'garden',
  'forest',
  'aqua',
  'lofi',
  'pastel',
  'fantasy',
  'wireframe',
  'black',
  'luxury',
  'dracula',
  'cmyk',
  'autumn',
  'business',
  'acid',
  'lemonade',
  'night',
  'coffee',
  'winter',
  'dim',
  'nord',
  'sunset',
  'caramellatte',
  'abyss',
  'silk',
]
---
    <style>
      .glowy-btn {
        padding: 0.6em 2em;
        border: none;
        outline: none;
        color: var(--color-accent-content);
        background: var(--color-accent);
        cursor: pointer;
        position: relative;
        z-index: 0;
        border-radius: var(--radius-box);
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
      }

      .glowy-btn:before {
        content: "";
        background: linear-gradient(
          45deg,
          #ff0000,
          #ff7300,
          #fffb00,
          #48ff00,
          #00ffd5,
          #002bff,
          #7a00ff,
          #ff00c8,
          #ff0000
        );
        position: absolute;
        top: -2px;
        left: -2px;
        background-size: 200%;
        z-index: -1;
        /* filter: blur(5px); */
        /* -webkit-filter: blur(5px); */
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        animation: glowing-button 20s linear 2;
        transition: opacity 0.3s ease-in-out;
        border-radius: var(--radius-box);
      }

      @keyframes glowing-button {
        0% {
          background-position: 0 0;
        }
        50% {
          background-position: 400% 0;
        }
        100% {
          background-position: 0 0;
        }
      }

      .glowy-btn:after {
        z-index: -1;
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        background: var(--color-accent);
        left: 0;
        top: 0;
        border-radius: var(--radius-box);
      }
      
    </style>
    <div class="dropdown dropdown-bottom dropdown-end">
      <div tabindex="0" role="button" class="btn glowy-btn m-1">
        <div class="md:hidden w-full">Theme</div>
        <div class="w-full hidden md:block">Site Theme</div>
        <svg
          width="12px"
          height="12px"
          class="inline-block h-2 w-2 fill-current opacity-60"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 2048 2048">
          <path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"></path>
        </svg>

      </div>
      <form id="theme-form">
        <ul tabindex="0" class="overflow-auto flex flex-col flex-nowrap max-h-96 theme-switcher dropdown-content menu bg-base-300 rounded-box z-1 w-32 p-2 shadow-2xl">
          <!-- might need to label the 1st as default -->
          <!-- <li>
            <input
              type="radio"
              name="theme-dropdown"
              class="theme-controller btn btn-sm btn-block btn-ghost justify-start"
              aria-label="Default"
              value="default" />
          </li>   -->
        {myThemeList.map((theme)=>{
            return (
              <li>
                <input
                  type="radio"
                  name="theme-dropdown"
                  class="theme-controller btn btn-sm btn-block btn-ghost justify-start"
                  aria-label={theme}
                  value={theme} />
              </li>
            )
          })}
        </ul>
      </form>
    </div>
  <!-- inspired by and modified from the astro integration "astro-disy-theme-toggle" -->
  <script data-astro-rerun>
  function setTheme(document) {
    const htmlElement = document.documentElement
    const themeForm = document.getElementById('theme-form'); // the form
    const themeFormElements = themeForm.elements['theme-dropdown'];
  
    const theme = (() => {
      // nullish coalescing operator (??)
      // returns the right-hand side operand when its left-hand side operand is null or undefined
      const localStorageTheme = localStorage?.getItem('theme') ?? ''  

      for (let i = 0; i < themeFormElements.length; i++) {
        if (themeFormElements[i].value === localStorageTheme) {
          themeFormElements[i].checked = true;
        } else {
          themeFormElements[i].checked = false;
        }
      }
      
    })()
  }
  
  setTheme(document)
  
  document.addEventListener('astro:before-swap', (event) => {
      setTheme(event.newDocument)
  })

  const htmlElement = document.documentElement
  const themeForm = document.getElementById('theme-form'); // the form
  const themeFormElements = themeForm.elements['theme-dropdown']; // the RadioNodeList

  themeForm.addEventListener('change', function () {
    // console.log("Value changed; new value is " + themeFormElements.value);
    localStorage.setItem('theme', themeFormElements.value)
    // learning the behavior of RadioNodeList when you select a new radio button
    // for (let i = 0; i < themeFormElements.length; i++) {
    //   console.log('iteration #', i, 
    //     ' value is: ', themeFormElements[i].value,
    //     ' checked is: ', themeFormElements[i].checked
    //   )
  });

</script>